@base_url = http://localhost:3000/auth
@user_base_url = http://localhost:3000/user
@profile_base_url = http://localhost:3000/profile
@recipes_base_url = http://localhost:3000/recipes
@ingredients_base_url = http://localhost:3000/ingredients
@authToken = {{signIn.response.body.access_token}}

# @name signIn
POST {{base_url}}/signin
Content-Type: application/json

{
  "email": "ronaldo4@gmail.com",
  "password": "Password123@"
}

###

# @name signOut
POST {{base_url}}/signout
Content-Type: application/json

###

# @name register
POST {{base_url}}/register
Content-Type: application/json

{
  "name": "Ronaldo1",
  "email": "ronaldo4@gmail.com",
  "password": "Password123@"
}

###

# @name user
GET {{user_base_url}}
Content-Type: application/json

###

# @name updating
PATCH  {{user_base_url}}
Content-Type: application/json

{
  "name": "Ronaldo4"
}

###

# @name delete
DELETE {{user_base_url}}
Content-Type: application/json
Authorization: Bearer {{authToken}}

###

# @name GetProfile
GET {{profile_base_url}}
Content-Type: application/json

###

# @name SaveProfile
PATCH  {{profile_base_url}}
Content-Type: application/json

{
  "fixedCosts": 30,
  "daysOfWorking": 6,
  "salesPerDay": 50
}

###

# Salvar o id da receita para buscar posteriormente.
# Antes de salvar verificar se ja existe uma receita existente.
# @name create-recipe
POST {{recipes_base_url}}
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
	"title": "receita",
  "describe": "describre"
}

###

# @name all-recipes
GET {{recipes_base_url}}/all
Content-Type: application/json
Authorization: Bearer {{authToken}}

###
# aprimorar essa chamada => procurar a receita dentro do user, e não global
# @name unique-recipe-id
GET {{recipes_base_url}}/1
Content-Type: application/json
Authorization: Bearer {{authToken}}

###

# @name unique-recipe-name
GET {{recipes_base_url}}
Content-Type: application/json
Authorization: Bearer {{authToken}}

###

# @name updating
PUT {{recipes_base_url}}/1
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
	"title": "Novo asd",
  "describe": "novo asd"
}

###

# @name delete
DELETE {{recipes_base_url}}/5
Content-Type: application/json
Authorization: Bearer {{authToken}}

###
# Usar uma variavel em cache ou localStorage para obter o id da receita em questão.
# @name create-ingredient
POST {{ingredients_base_url}}/5
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
	"name": "ingrediente 4",
	"usedWeight": 2,
	"marketPrice": 10,
	"grossWeight": 4
}

###
# @name unique-ingredient
GET {{ingredients_base_url}}/10
Content-Type: application/json
Authorization: Bearer {{authToken}}

###

# @name updating-ingredient
PUT {{ingredients_base_url}}/5
Content-Type: application/json
Authorization: Bearer {{authToken}}

{
	"usedWeight": 2,
	"marketPrice": 2,
	"grossWeight": 2
}

###

# @name delete
DELETE {{ingredients_base_url}}/5
Content-Type: application/json
Authorization: Bearer {{authToken}}